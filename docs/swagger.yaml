basePath: /user/{userID}/account/feed
definitions:
  http.Response-transfer_models_Account:
    properties:
      body:
        $ref: '#/definitions/transfer_models.Account'
      status:
        type: integer
    type: object
  http.Response-transfer_models_BalanceResponse:
    properties:
      body:
        $ref: '#/definitions/transfer_models.BalanceResponse'
      status:
        type: integer
    type: object
  http.Response-transfer_models_BudgetActualResponse:
    properties:
      body:
        $ref: '#/definitions/transfer_models.BudgetActualResponse'
      status:
        type: integer
    type: object
  http.Response-transfer_models_BudgetPlannedResponse:
    properties:
      body:
        $ref: '#/definitions/transfer_models.BudgetPlannedResponse'
      status:
        type: integer
    type: object
  http.Response-transfer_models_UserFeed:
    properties:
      body:
        $ref: '#/definitions/transfer_models.UserFeed'
      status:
        type: integer
    type: object
  http.Response-transfer_models_UserTransfer:
    properties:
      body:
        $ref: '#/definitions/transfer_models.UserTransfer'
      status:
        type: integer
    type: object
  http.ResponseError:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  http.signInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  http.signUpResponse:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  models.Accounts:
    properties:
      balance:
        type: number
      id:
        type: string
      mean_payment:
        type: string
      user_id:
        type: string
    type: object
  models.User:
    properties:
      avatar_url:
        type: string
      id:
        type: string
      password:
        type: string
      planned_budget:
        type: number
      salt:
        type: string
      username:
        type: string
    type: object
  transfer_models.Account:
    properties:
      account:
        items:
          $ref: '#/definitions/models.Accounts'
        type: array
    type: object
  transfer_models.BalanceResponse:
    properties:
      balance:
        type: number
    type: object
  transfer_models.BudgetActualResponse:
    properties:
      actual_balance:
        type: number
    type: object
  transfer_models.BudgetPlannedResponse:
    properties:
      planned_balance:
        type: number
    type: object
  transfer_models.UserFeed:
    properties:
      account:
        items:
          $ref: '#/definitions/models.Accounts'
        type: array
      actual_balance:
        type: number
      balance:
        type: number
      planned_balance:
        type: number
    type: object
  transfer_models.UserTransfer:
    properties:
      avatar_url:
        type: string
      id:
        type: string
      planned_budget:
        type: number
      username:
        type: string
    type: object
host: localhost:8090
info:
  contact:
    email: dimka.komarov@bk.ru
    name: Hamster API Support
  description: Server API for Hamster Money Service Application
  title: Hamster API
  version: 1.0.1
paths:
  /api/auth/checkAuth:
    post:
      consumes:
      - application/json
      description: Validate auth
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: User status
          schema:
            $ref: '#/definitions/http.ResponseError'
        "400":
          description: Invalid cookie
          schema:
            $ref: '#/definitions/http.ResponseError'
        "500":
          description: 'Server error: cookie read fail'
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Validate Auth
      tags:
      - Auth
  /api/auth/signin:
    post:
      consumes:
      - application/json
      description: Login account
      parameters:
      - description: username && password
        in: body
        name: userInput
        required: true
        schema:
          $ref: '#/definitions/http.signInput'
      produces:
      - application/json
      responses:
        "200":
          description: User logedin
          schema:
            $ref: '#/definitions/http.signUpResponse'
        "400":
          description: Incorrect Input
          schema:
            $ref: '#/definitions/http.ResponseError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Sign In
      tags:
      - Auth
  /api/auth/signup:
    post:
      consumes:
      - application/json
      description: Create Account
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: User Created
          schema:
            $ref: '#/definitions/http.signUpResponse'
        "400":
          description: Incorrect Input
          schema:
            $ref: '#/definitions/http.ResponseError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Sign Up
      tags:
      - Auth
  /api/user/{userID}/:
    get:
      description: Get user with chosen ID
      produces:
      - application/json
      responses:
        "200":
          description: Show balance
          schema:
            $ref: '#/definitions/http.Response-transfer_models_UserTransfer'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/http.ResponseError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Get User
      tags:
      - User
  /api/user/{userID}/accounts/all:
    get:
      description: Get User accounts
      produces:
      - application/json
      responses:
        "200":
          description: Show actual accounts
          schema:
            $ref: '#/definitions/http.Response-transfer_models_Account'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/http.ResponseError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Get User Accounts
      tags:
      - User
  /api/user/{userID}/actualBudget:
    get:
      description: Get User actual budget
      produces:
      - application/json
      responses:
        "200":
          description: Show actual budget
          schema:
            $ref: '#/definitions/http.Response-transfer_models_BudgetActualResponse'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/http.ResponseError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Get Actual Budget
      tags:
      - User
  /api/user/{userID}/balance:
    get:
      description: Get User balance
      produces:
      - application/json
      responses:
        "200":
          description: Show balance
          schema:
            $ref: '#/definitions/http.Response-transfer_models_BalanceResponse'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/http.ResponseError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Get Balance
      tags:
      - User
  /api/user/{userID}/feed:
    get:
      description: Get Feed user info
      produces:
      - application/json
      responses:
        "200":
          description: Show actual accounts
          schema:
            $ref: '#/definitions/http.Response-transfer_models_UserFeed'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/http.ResponseError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Get Feed
      tags:
      - User
  /api/user/{userID}/plannedBudget:
    get:
      description: Get User planned budget
      produces:
      - application/json
      responses:
        "200":
          description: Show planned budget
          schema:
            $ref: '#/definitions/http.Response-transfer_models_BudgetPlannedResponse'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/http.ResponseError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Get Planned Budget
      tags:
      - User
  /api/user/{userID}/update:
    put:
      consumes:
      - application/json
      description: Update user info
      parameters:
      - description: user info update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/transfer_models.UserTransfer'
      produces:
      - application/json
      responses:
        "200":
          description: Update user info
          schema:
            $ref: '#/definitions/http.Response-transfer_models_UserTransfer'
        "400":
          description: Client error
          schema:
            $ref: '#/definitions/http.ResponseError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: PUT Update
      tags:
      - User
swagger: "2.0"
